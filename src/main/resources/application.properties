
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://sql12.freemysqlhosting.net/sql12268777?useSSL=false

# Username and secret
spring.datasource.username = sql12268777
spring.datasource.password = pScC17F7yA


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.data-username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa.show-sql=false
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=restaurantcrm
security.jwt.client-secret=password1$
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid



#spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.host = smtp.gmail.com
spring.mail.username = restaurantcrmsystem@gmail.com
spring.mail.password = crm@1994
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
support.email=restaurantcrmsystem@gmail.com


spring.redis.host= redis-12005.c81.us-east-1-2.ec2.cloud.redislabs.com
spring.redis.port= 12005
spring.redis.password= jmx3peArcl2ivzdV52gFUbTTftvx2I0g
